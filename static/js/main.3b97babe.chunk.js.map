{"version":3,"sources":["helper-functions.js","components/repos/repo/list/list.js","components/repos/repo/repo.js","components/userinput/listcreator/listcreator.js","components/userinput/user-input.js","components/errorboundary/errorboundary.js","components/repos/repos.js","store/actions.js","containers/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["parseValue","value","toString","Object","keys","List","_ref","list","repo","react_default","a","createElement","Repo","ISOdate","format","name","description","owner","pushed_at","Error","className","repo_list_list","moment","Date","parse","ListCreator","selectList","index","onChange","e","target","Userinput","changeUrl","submitUrl","url","type","onClick","listcreator","ErrorBoundary","state","hasError","error","info","this","setState","props","children","Component","Repos","newRepos","repos","map","errorboundary_ErrorBoundary","key","id","repos_repo_repo","login","passdata","data","payload","connect","userRepos","dispatch","axios","get","cutUrl","split","concat","apiUrl","then","response","console","log","catch","submit","user_input","repos_repos","Boolean","window","location","hostname","match","initialState","0","1","2","3","4","reducer","arguments","length","undefined","action","objectSpread","newRepo","clearRepos","filter","toConsumableArray","find","defineProperty","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b97babe.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\n\r\nexport const parseValue = (value) => {\r\n    switch (typeof value){\r\n        case \"boolean\":\r\n            return value.toString();\r\n        case \"object\":\r\n            var keys = Object.keys( value );\r\n            return  value[keys[0]].toString();\r\n        default:\r\n            return value\r\n    }\r\n}\r\n\r\n//converts ISO date to XX days ago string\r\nexport const parseFromNow = (ISOdate) => moment(Date.parse(ISOdate)).fromNow();\r\n\r\nexport const formatISO = (ISOdate, format) => moment(Date.parse(ISOdate)).format(format);;","import React from 'react';\r\nimport {parseValue} from '../../../../helper-functions';\r\nimport './list.less';\r\n\r\nconst List = ({list, repo}) => {\r\n\r\n\r\n\r\n    return (\r\n       <ul>\r\n            {list[0]!==\"none\" && <li>{list[0]}: {parseValue(repo[list[0]])}</li>}\r\n            {list[1]!==\"none\" && <li>{list[1]}: {parseValue(repo[list[1]])}</li>}\r\n            {list[2]!==\"none\" && <li>{list[2]}: {parseValue(repo[list[2]])}</li>}\r\n            {list[3]!==\"none\" && <li>{list[3]}: {parseValue(repo[list[3]])}</li>}\r\n            {list[4]!==\"none\" && <li>{list[4]}: {parseValue(repo[list[4]])}</li>}\r\n        </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport List from './list/list';\r\nimport {parseFromNow, formatISO} from '../../../helper-functions';\r\nimport './repo.less'\r\n\r\nconst Repo = ({name, description, owner, pushed_at, list, repo}) => {\r\n\r\n    if (owner===\"error\"){\r\n        throw new Error(\"Failed to get resource\");\r\n    }\r\n\r\n    return (<div className={\"repo\"}>\r\n        <div className={\"title\"}><h3>{name}</h3></div>\r\n        <div  className={\"content\"}>\r\n        <div><div>Description:</div><div>{description? description:\"lacking\"}</div></div>\r\n        <List list={list} repo={repo}></List>\r\n        <div><div>Owner:</div><div>{owner}</div></div>\r\n        <div><div>Last push:</div><div>{formatISO(pushed_at, 'MM-DD-YYYY LTS')}</div></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repo;","import React from 'react';\r\n\r\nconst ListCreator = ({selectList, index}) => {\r\n\r\n    //validate url here but do not diable input, red color and message\r\n\r\n    return (\r\n        <select onChange={(e)=>selectList(index, e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"open_issues\">open_issues</option>\r\n            <option value=\"archived\">archived</option>\r\n            <option value=\"default_branch\">default_branch</option>\r\n            <option value=\"disabled\">disabled</option>\r\n            <option value=\"id\">id</option>\r\n            <option value=\"owner\">owner</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ListCreator;","import React from 'react';\r\nimport ListCreator from './listcreator/listcreator'\r\nimport './userinput.less';\r\nconst Userinput = ({changeUrl, submitUrl, url, selectList}) => {\r\n\r\n//validate url here but do not diable input, red color and message\r\n\r\n\r\n    return (\r\n        <div className={\"userinput\"} >\r\n            <h2>Paste url below</h2>\r\n            <input value={url} type=\"text\" onChange={(e)=>changeUrl(e.target.value)}></input>\r\n            <button onClick={submitUrl}>ADD REPO</button>\r\n            <div>\r\n            <h2>List selector</h2>\r\n            <ListCreator index={0} selectList={selectList}></ListCreator>\r\n            <ListCreator index={1} selectList={selectList}></ListCreator>\r\n            <ListCreator index={2} selectList={selectList}></ListCreator>\r\n            <ListCreator index={3} selectList={selectList}></ListCreator>\r\n            <ListCreator index={4} selectList={selectList}></ListCreator>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Userinput;","import React, {Component} from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state={hasError: false, error: \"\"};\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true, error: error });\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n      }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <div><h3>Failed to get resource.</h3><p>Please check connection and URL</p></div>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","import React from 'react';\r\nimport Repo from './repo/repo'\r\nimport './repos.less';\r\nimport ErrorBoundary from '../errorboundary/errorboundary';\r\n\r\nconst Repos = (props) => {\r\n    let newRepos = null;\r\nif (props.repos) {\r\n    newRepos = props.repos.map((repo)=>{return <ErrorBoundary key={repo.id}><Repo  name={repo.name} owner={repo.owner.login} description={repo.description} pushed_at={repo.pushed_at} repo={repo} list={props.list} /></ErrorBoundary>});\r\n}\r\n    return (\r\n        <ErrorBoundary>\r\n        <div className={\"repos\"}>{newRepos}</div>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default Repos;","import axios from 'axios';\r\n\r\nexport const ADD = 'ADD';\r\nexport const CHANGE = \"CHANGE\";\r\nexport const SELECT_LIST = \"SELECT_LIST\";\r\nexport const THROW_ERROR = \"THROW_ERROR\";\r\n\r\nexport const passdata = (data) => {\r\n    return {\r\n        type: ADD,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const submit = (url) => {\r\n    let apiUrl = (url) => {\r\n        let cutUrl = url.split(\"/\");\r\n        \r\n        let owner = cutUrl[3];\r\n        let repo = cutUrl[4];\r\n        return (\r\n            `https://api.github.com/repos/${owner}/${repo}`\r\n        )\r\n    }\r\n   \r\n    return dispatch => {\r\n        axios.get(apiUrl(url)).then(response => {\r\n            console.log(response, response.data);\r\n            dispatch(passdata(response.data))\r\n        }).catch(error => {\r\n            console.log(error);\r\n            dispatch(passdata(error))\r\n        })\r\n    }\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../components/repos/repo/repo';\nimport '../components/userinput/user-input';\nimport Repos from '../components/repos/repos';\nimport Userinput from '../components/userinput/user-input';\nimport {submit} from '../store/actions';\nimport ErrorBoundary from '../components/errorboundary/errorboundary';\nimport './App.less'\n\n\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      <nav><h1>Get Repo App</h1></nav>\n      \n     <Userinput selectList={props.selectList} url={props.url} submitUrl={()=>props.submitUrl(props.url)} changeUrl={props.changeUrl}></Userinput>\n     \n    <ErrorBoundary>\n     <Repos repos={props.repos} list={props.list}/>\n     </ErrorBoundary>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url,\n    repos: state.userRepos,\n    list: state.list\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitUrl: (url)=>dispatch(submit(url)),\n    changeUrl: (url)=>dispatch({type:\"CHANGE\", payload:url}),\n    selectList: (index, value)=>dispatch({type:\"SELECT_LIST\", payload:{index:index, value:value}})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    userRepos: [],\r\n    list: {\r\n        0: \"none\",\r\n        1: \"none\",\r\n        2: \"none\",\r\n        3: \"none\",\r\n        4: \"none\"\r\n    },\r\n    url: \"https://github.com/Mostrowski8/GitHub-API\"\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n\r\n            return {\r\n                ...state,\r\n                url: action.payload\r\n            }\r\n            case \"ADD\":\r\n                \r\n                let newRepo = action.payload;\r\n                let clearRepos = state.userRepos.filter((repo) => {\r\n                    return repo.owner.login !== \"error\"\r\n                    });\r\n                    \r\n                if (newRepo instanceof Error) {\r\n                    console.log(\"MATCHED\")\r\n                    let newRepo = {id:0, owner:{login: \"error\"} };\r\n                    return {\r\n                        ...state,\r\n                        userRepos: [...clearRepos, newRepo]\r\n                    }\r\n                }\r\n\r\n                let duplicate = clearRepos.find((repo) => {\r\n                    return repo.id === newRepo.id\r\n                });\r\n                if (duplicate) {\r\n                    let newRepos = clearRepos.map((repo) => {\r\n                        if (repo.id === newRepo.id) {\r\n                            return newRepo;\r\n                        }\r\n                        return repo;\r\n                    })\r\n                    return {\r\n                        ...state,\r\n                        userRepos: newRepos\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    userRepos: [...clearRepos, newRepo]\r\n                }\r\n                case \"SELECT_LIST\":\r\n                    return {\r\n                        ...state,\r\n                        list: {...state.list, [action.payload.index]:action.payload.value}\r\n                    }\r\n                default:\r\n                    return {\r\n                            ...state\r\n                        }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport './index.less';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport thunk from 'redux-thunk';\n\n\n\nconst logger = store => {\n    return next =>{\n        return action =>{\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n        \n    }\n};\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnchancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}