{"version":3,"sources":["helper-functions.js","components/repos/repo/list/list.js","components/repos/repo/repo.js","components/userinput/listcreator/listcreator.js","components/userinput/user-input.js","components/errorboundary/errorboundary.js","components/repos/repos.js","store/actions.js","containers/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["parseValue","value","toString","Object","keys","List","_ref","list","repo","react_default","a","createElement","className","Repo","ISOdate","format","name","description","owner","pushed_at","Error","repo_list_list","moment","Date","parse","connect","state","listitems","selectList","index","listCreatorItems","map","item","onChange","e","target","Userinput","changeUrl","submitUrl","url","type","onClick","listcreator_listcreator","ErrorBoundary","hasError","error","info","this","setState","props","errorType","message","children","Component","Repos","newRepos","repos","errorboundary","key","id","repos_repo_repo","login","passdata","data","payload","userRepos","dispatch","axios","get","cutUrl","split","concat","apiUrl","then","response","console","log","catch","submit","user_input","repos_repos","Boolean","window","location","hostname","match","initialState","0","1","2","3","4","reducer","arguments","length","undefined","action","objectSpread","newRepo","clearRepos","filter","toConsumableArray","find","defineProperty","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f139798.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\n\r\nexport const parseValue = (value) => {\r\n    switch (typeof value){\r\n        case \"boolean\":\r\n            return value.toString();\r\n        case \"object\":\r\n            var keys = Object.keys( value );\r\n            return  value[keys[0]].toString();\r\n        default:\r\n            return value\r\n    }\r\n}\r\n\r\n//converts ISO date to XX days ago string\r\nexport const parseFromNow = (ISOdate) => moment(Date.parse(ISOdate)).fromNow();\r\n\r\nexport const formatISO = (ISOdate, format) => moment(Date.parse(ISOdate)).format(format);;","import React from 'react';\r\nimport {parseValue} from '../../../../helper-functions';\r\nimport './list.less';\r\n\r\nconst List = ({list, repo}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"itemsList\"}>\r\n            <h4>Items list</h4>\r\n            <div className={\"listcontainer\"}>\r\n            {list[0]!==\"none\" && <div className={\"row listitem\"}><div className={\"text-right label column-2\"}>{list[0]}:&nbsp;</div><div className={\"text-left column-2\"}>{parseValue(repo[list[0]])}</div></div>}\r\n            {list[1]!==\"none\" && <div className={\"row listitem\"}><div className={\"text-right label column-2\"}>{list[1]}:&nbsp;</div><div className={\"text-left column-2\"}>{parseValue(repo[list[1]])}</div></div>}\r\n            {list[2]!==\"none\" && <div className={\"row listitem\"}><div className={\"text-right label column-2\"}>{list[2]}:&nbsp;</div><div className={\"text-left column-2\"}>{parseValue(repo[list[2]])}</div></div>}\r\n            {list[3]!==\"none\" && <div className={\"row listitem\"}><div className={\"text-right label column-2\"}>{list[3]}:&nbsp;</div><div className={\"text-left column-2\"}>{parseValue(repo[list[3]])}</div></div>}\r\n            {list[4]!==\"none\" && <div className={\"row listitem\"}><div className={\"text-right label column-2\"}>{list[4]}:&nbsp;</div><div className={\"text-left column-2\"}>{parseValue(repo[list[4]])}</div></div>}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport List from './list/list';\r\nimport {parseFromNow, formatISO} from '../../../helper-functions';\r\nimport './repo.less'\r\n\r\nconst Repo = ({name, description, owner, pushed_at, list, repo}) => {\r\n\r\n    if (owner===\"error\"){\r\n        throw new Error(\"Failed to get resource\");\r\n    }\r\n\r\n    return (<div className={\"repo\"}>\r\n        <div className={\"title\"}><h3>{name}</h3></div>\r\n        <div  className={\"content\"}>\r\n        <div className={\"column-1\"}><div className={\"label text-right\"}>Description:&nbsp;</div><div className={\"value text-left\"}>{description? description:\"lacking\"}</div></div>\r\n        <List list={list} repo={repo}></List>\r\n        <div className={\"row\"}><div className={\"label column-2 text-right\"}>Owner:&nbsp;</div><div className={\"value column-2 text-left\"}>{owner}</div></div>\r\n        <div className={\"row\"}><div className={\"label column-2 text-right\"}>Last push:&nbsp;</div><div className={\"value column-2 text-left\"}>{formatISO(pushed_at, 'MM-DD-YYYY LTS')}</div></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repo;","import React from 'react';\r\nimport './listcreator.less';\r\nimport {connect} from 'react-redux';\r\n\r\nconst ListCreator = ({selectList, index, listitems}) => {\r\n\r\nlet listCreatorItems = listitems.map((item)=>{return <option value={item}>{item}</option>});\r\n\r\n    return (\r\n    \r\n    <div className={\"column-5\"}>\r\n        <select className={\"listinput\"} onChange={(e)=>selectList(index, e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            {listCreatorItems}\r\n        </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listitems: state.listitems\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps)(ListCreator);","import React from 'react';\r\nimport ListCreator from './listcreator/listcreator'\r\nimport './userinput.less';\r\nconst Userinput = ({changeUrl, submitUrl, url, selectList}) => {\r\n\r\n//validate url here but do not diable input, red color and message\r\n\r\n\r\n    return (\r\n        <div className={\"userinput\"} >\r\n            <h2>Paste url below</h2>\r\n            <input value={url} type=\"text\" onChange={(e)=>changeUrl(e.target.value)}></input>\r\n            <button onClick={submitUrl}>ADD REPO</button>\r\n            <h2>List creator</h2>\r\n            <div className={\"row inputscontainer\"}>\r\n            <ListCreator index={0} selectList={selectList}></ListCreator>\r\n            <ListCreator index={1} selectList={selectList}></ListCreator>\r\n            <ListCreator index={2} selectList={selectList}></ListCreator>\r\n            <ListCreator index={3} selectList={selectList}></ListCreator>\r\n            <ListCreator index={4} selectList={selectList}></ListCreator>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Userinput;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state={hasError: false, error: \"\"};\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true, error: error });\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n      }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <div><h3>Failed to get resource.</h3><p>{this.props.errorType.message}</p><p>Please check connection and URL</p></div>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      errorType: state.errorType\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ErrorBoundary)","import React from 'react';\r\nimport Repo from './repo/repo'\r\nimport './repos.less';\r\nimport ErrorBoundary from '../errorboundary/errorboundary';\r\n\r\nconst Repos = (props) => {\r\n    let newRepos = null;\r\nif (props.repos) {\r\n    newRepos = props.repos.map((repo)=>{return <ErrorBoundary key={repo.id}><Repo  name={repo.name} owner={repo.owner.login} description={repo.description} pushed_at={repo.pushed_at} repo={repo} list={props.list} /></ErrorBoundary>});\r\n}\r\n    return (\r\n\r\n        <div className={\"repos\"}>{newRepos}</div>\r\n   \r\n    )\r\n}\r\n\r\nexport default Repos;","import axios from 'axios';\r\n\r\nexport const ADD = 'ADD';\r\nexport const CHANGE = \"CHANGE\";\r\nexport const SELECT_LIST = \"SELECT_LIST\";\r\nexport const THROW_ERROR = \"THROW_ERROR\";\r\n\r\nexport const passdata = (data) => {\r\n    return {\r\n        type: ADD,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const submit = (url) => {\r\n    let apiUrl = (url) => {\r\n        let cutUrl = url.split(\"/\");\r\n        \r\n        let owner = cutUrl[3];\r\n        let repo = cutUrl[4];\r\n        return (\r\n            `https://api.github.com/repos/${owner}/${repo}`\r\n        )\r\n    }\r\n   \r\n    return dispatch => {\r\n        axios.get(apiUrl(url)).then(response => {\r\n            console.log(response, response.data);\r\n            dispatch(passdata(response.data))\r\n        }).catch(error => {\r\n            console.log(error);\r\n            dispatch(passdata(error))\r\n        })\r\n    }\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../components/repos/repo/repo';\nimport '../components/userinput/user-input';\nimport Repos from '../components/repos/repos';\nimport Userinput from '../components/userinput/user-input';\nimport {submit} from '../store/actions';\nimport ErrorBoundary from '../components/errorboundary/errorboundary';\nimport './App.less'\n\n\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      <nav><h1>Get Repo App</h1></nav>\n      \n     <Userinput selectList={props.selectList} url={props.url} submitUrl={()=>props.submitUrl(props.url)} changeUrl={props.changeUrl}></Userinput>\n\n     <Repos repos={props.repos} list={props.list}/>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url,\n    repos: state.userRepos,\n    list: state.list\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitUrl: (url)=>dispatch(submit(url)),\n    changeUrl: (url)=>dispatch({type:\"CHANGE\", payload:url}),\n    selectList: (index, value)=>dispatch({type:\"SELECT_LIST\", payload:{index:index, value:value}})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    listitems: [],\r\n    errorType: null,\r\n    userRepos: [],\r\n    list: {\r\n        0: \"none\",\r\n        1: \"none\",\r\n        2: \"none\",\r\n        3: \"none\",\r\n        4: \"none\"\r\n    },\r\n    url: \"https://github.com/Mostrowski8/GitHub-API\"\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n\r\n            return {\r\n                ...state,\r\n                url: action.payload\r\n            }\r\n            case \"ADD\":\r\n                \r\n                let newRepo = action.payload;\r\n                let clearRepos = state.userRepos.filter((repo) => {\r\n                    return repo.owner.login !== \"error\"\r\n                    });\r\n                    \r\n                if (newRepo instanceof Error) {\r\n                    console.log(\"MATCHED\")\r\n                    let newRepo = {id:0, owner:{login: \"error\"} };\r\n                    return {\r\n                        ...state,\r\n                        errorType: action.payload,\r\n                        userRepos: [...clearRepos, newRepo]\r\n                    }\r\n                }\r\n\r\n                let duplicate = clearRepos.find((repo) => {\r\n                    return repo.id === newRepo.id\r\n                });\r\n                if (duplicate) {\r\n                    let newRepos = clearRepos.map((repo) => {\r\n                        if (repo.id === newRepo.id) {\r\n                            return newRepo;\r\n                        }\r\n                        return repo;\r\n                    })\r\n                    return {\r\n                        ...state,\r\n                        userRepos: newRepos,\r\n                        errorType: null\r\n                    }\r\n                }\r\n                let listitems = Object.keys(newRepo);\r\n                return {\r\n                    ...state,\r\n                    userRepos: [...clearRepos, newRepo],\r\n                    errorType: null,\r\n                    listitems: listitems\r\n                }\r\n                case \"SELECT_LIST\":\r\n                    return {\r\n                        ...state,\r\n                        list: {...state.list, [action.payload.index]:action.payload.value}\r\n                    }\r\n                default:\r\n                    return {\r\n                            ...state\r\n                        }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport './index.less';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport thunk from 'redux-thunk';\n\n\n\nconst logger = store => {\n    return next =>{\n        return action =>{\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n        \n    }\n};\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnchancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}